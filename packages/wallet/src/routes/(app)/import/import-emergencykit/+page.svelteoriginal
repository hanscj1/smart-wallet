<script lang="ts">
  import { importEmergencyKit } from "$lib/imports/emergencyKit.js";
	// import { deepCopy } from "$lib/utilities/utilities";
  import EmergencyKit from '$lib/components/EmergencyKit.svelte';
  import Confirm from "$lib/components/Confirm.svelte";
	import { goto } from "$app/navigation";
	import { PATH_WELCOME } from "$lib/common/constants";
  
  let emergencyData=null;
  let confirmed = false;
  let showConfirm = false;
  const processData = true; // don't process the data, just read it and send it back. If true, it will import the data from the component

  $: console.log('import-emergencykit-data::>>', emergencyData);

  $: console.log('import-emergencykit-confirmed::>>', confirmed);

  $: {
    if (confirmed && !processData) {
      handleConfirm();
    }
  }

  function readFile() {  
    const fileInput = document.getElementById('fileInput');
    const file = fileInput.files[0];
    if (!file) {
      console.log('No file selected');
      return;
    }
    let reader = new FileReader();

    reader.onload = () => {
      try {
        emergencyData = JSON.parse(reader.result);
        if (!validateData(emergencyData)) {
          console.log('Invalid data format');
          return;
        }
        showConfirm = true;
      } catch (e) {
        console.log(e);
      }
    };

    reader.onerror = error => {
      console.log(`Error reading file: ${error}`);
    };

    reader.readAsText(file);
  }

  function validateData(data) {
    if (!data?.data) {
      // not encrypted so don't trust it
      throw 'Invalid data format - not encrypted';
    }
    return true;
  }

  function handleConfirm() {
    showConfirm = false;
    if (!processData) {
      console.log('importing emergency kit - handleConfirm', emergencyData);
      importEmergencyKit(emergencyData);
    }
  }

</script>

<!-- <Confirm
  bind:show={showConfirm}
  title="Import Emergency Kit"
  content="Are you sure you want to import this emergency kit? This will overwrite your existing accounts."
  handleConfirm={() => {handleConfirm()}}
  handleReject={() => {showConfirm=false; goto(PATH_WELCOME)}}
  confirmText="Yes, Import"
  rejectText="No, Cancel"
  />
 -->
<div class="p-2 h-36">
  <div class="text-center">
    <h2 class="text-2xl font-bold">wallet - Import Emergency Kit</h2>
    <p class="text-base-content">Import your emergency kit to restore your wallet accounts</p>
  </div>
  <EmergencyKit defaultClass="mt-6" bind:confirmed={confirmed} bind:emergencyData={emergencyData} processData={processData}/>


  <!-- <div class="mt-6">
    <form>
      <input type="file" id="fileInput" accept=".json">
      <button type="button" class="btn btn-primary" on:click={readFile}>Read File</button>
    </form>
  </div> -->




</div>

async function onPortExternalListener(data, sender) {
  try {
    console.log('background.js - onPortExternalListener - sender:', sender);

    if (data?.request?.method) {
      const externalData = { ...data, sender };

      console.log('background.js - externalData:', externalData);

      // Track data needed by the UI for approvals
      if (['eth_requestAccounts', 'eth_accounts'].includes(data.request.method)) {
        requestsExternal.set(data.requestData.requestId, { requestData: externalData });

        console.log('background.js - onPortExternalListener - data:', data);
        console.log('background.js - requestsExternal:', requestsExternal);
      }

      switch (data.request.method) {
        case 'eth_requestAccounts':
          showDappPopup(data.request.metaDataParams.requestData.requestId);
          break;
        case 'eth_chainId':
          const yakklCurrentlySelected = await getObjectFromLocalStorage("yakklCurrentlySelected");

          console.log('background.js - eth_chainId - yakklCurrentlySelected:', yakklCurrentlySelected);

          if (yakklCurrentlySelected?.shortcuts?.networkChainId) {
            const value = '0x' + yakklCurrentlySelected.shortcuts.networkChainId.toString(16);

            console.log('background.js - chainId in hex:', value);

            sender.postMessage({
              method: data.request.method,
              response: {
                type: 'success',
                data: { code: 0, message: 'Changed chain.', data: value }
              },
              requestData: data.requestData
            });
          }
          break;
        default:
          console.log(`No ${data.request} method found.`);
          break;
      }
    } else {
      console.log(`No ${data.request} method found.`);
    }
  } catch (error) {
    console.log('background.js - ', error);
  }
}
